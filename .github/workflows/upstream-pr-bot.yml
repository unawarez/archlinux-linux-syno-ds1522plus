name: Create an upstream merge PR every so often
on:
  workflow_dispatch:
  push:
    paths: ".github/workflows/upstream-pr-bot.yml"
  schedule:
  - cron: "17 17 * * *"

env:
  UPSTREAM_REMOTE: "https://gitlab.archlinux.org/archlinux/packaging/packages/linux.git"
  UPSTREAM_REF: main
  BRANCH_NAME: "actions-merge-upstream-${{ github.run_id }}"

jobs:
  job:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      # a necessary component of `gh pr new` is having a unique branch already created with the commits on it.
      # how to clean these branches up?
      - run: git config user.name upstream-pr-bot
      - run: git config user.email null@bot
      - run: git checkout -b "$BRANCH_NAME"
      # don't know if it's guaranteed that main always points to latest tagged release,
      # but if it isn't I don't know what else to do.
      # allow-unrelated-histories isn't needed at a local cli so not sure what's different here.
      - run: git pull --no-rebase --allow-unrelated-histories -s ort -X theirs "$UPSTREAM_REMOTE" "$UPSTREAM_REF"
      # this automerge commit will 100% have wrong content in the pkgbuild, e.g. ignoring anything related to the new version number!
      # user just has to know that a commit (maybe amend) is needed. how can this be automated?
      # the wrongness of pkgbuild also means there is no point regenerating .srcinfo or checksums right now.
      - run: git push -u origin "$BRANCH_NAME"
      - run: gh pr create --title "Merge new upstream version" --draft --body "Please revise this automerge diff and then bring it into main!\n\nâ€”GitHub Actions"
